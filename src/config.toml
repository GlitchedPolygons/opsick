# Check out the opsick API documentation (or the config.h header file)
# to find out what each of these settings do.

[host]
log = false
port = 6677
threads = 2
max_clients = 0
max_header_size = 16384
max_body_size = 16777216
db_file = "opsick.db"

[admin]
max_users = 0
max_user_quota = 16777216
use_index_html = false
key_refresh_interval_hours = 72
argon2_time_cost = 16
argon2_memory_cost_kib = 65536
argon2_parallelism = 2
api_key_algo = 0
api_key_public_hexstr = "F407F5E089CE64002EB417FB683A7302287BE84108BB8E62FD8ED647DC62805C"
user_registration_password = "$argon2id$v=19$m=65536,t=16,p=2$U2VkdUF4N1prR0dFTGg5eg$9krHmXNAYWPxRhAU0MIe+5M8w6Wsw9yvWtwVu5EMd7RLgAMD4I/Pv8QrwZqSi1HsgrmxZ5t9g67xEQh3aWMN/A"

# This "user_registration_password" above is an Argon2 encoded hash of the password
# that the API master needs to additionally pass to the opsick server as a request parameter when trying to create a new user.

# The API master is whoever has the private key for signing requests to this backend to create and extend users. It's kinda like an admin.

# The API public key "api_key_public_hexstr" above is the hex-encoded Ed25519 key with which to verify API requests
# such as user creation and user extension (the API master needs to sign his request's body with the private counterpart of that key).

# "db_file" determines the filepath for the opsick sqlite3 db: you can replace it with ":memory:" to use a non-persistent, in-memory database (not recommended).